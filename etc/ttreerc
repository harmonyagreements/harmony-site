#------------------------------------------------------------------------
# sample .ttreerc file created automatically by ttree version 2.58
#
# This file originally written to /home/allison/.ttreerc
#
# For more information on the contents of this configuration file, see
# 
#     perldoc ttree
#     ttree -h
#
# NOTE: The directories specified below adopt the UNIX convention of
# specifying a user's home directory with the '~' character.  This
# feature may not be available on other platforms in which case you
# should specify the directory in entirety.
#------------------------------------------------------------------------

#------------------------------------------------------------------------
# General options

# print summary of what's going on (-v)
verbose 

# recurse into any sub-directories and process files (-r)
recurse


#------------------------------------------------------------------------
# The 'cfg' option defines a directory in which other ttree configuration
# files can be found;  you can specify a file using the '-f' option,
# 'ttree -f myconfig' and the script will look for the file in this
# directory.  Alteratively, provide an absolute path as an argument,
# 'ttree -f /tmp/foo'.
# 
# By default, this option is commented out.  You will need to create a 
# directory, uncomment the following line and set the value appropriately.
# Having done that, you can then create files exactly like this in that
# location.

#cfg = ~/.ttree

#------------------------------------------------------------------------
# The remaining options define the default behaviour when you run ttree.
# This file is always processed before any file specified by '-f'.  If
# you define the 'src' and 'dest' options then these will be used by
# default.  Values for these options defined in files loaded with '-f'
# will override these default.  Other options such as 'lib', 'ignore',
# 'copy' and 'accept' are accumulative.

# The 'src' option defines the location of the template files that
# you want to process
src  = ~/projects/git/harmony-site/src/pages

# The 'dest' option specifies where the output should go.  The script
# compares the modification dates of files in the 'src' and 'dest'
# directories to work out which need to be processed. 
dest = ~/projects/git/harmony-site/build

# 'lib' tells the processor (via INCLUDE_PATH) where to find any
# template files that may be INCLUDE'd.  You can specify many.
lib = ~/projects/git/harmony-site/src/templates

# Things that aren't templates and should be ignored, specified as Perl
# regexen.
ignore = \b(CVS|RCS|svn)\b
ignore = ^#

# Things that should be copied rather than processed.
copy = \.png$ 
copy = \.gif$ 
copy = \.jpg$ 
copy = \.pdf$ 
copy = \.css$ 
copy = \.mid$ 
copy = \.pdf$ 

# By default, everything not ignored or copied is accepted; add 'accept'
# lines if you want to filter further. e.g.
accept = \.html$
# accept = \.atml$

